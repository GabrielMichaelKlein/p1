[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\gaber\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\gaber\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 1.8.0_261)
[debug]       Load.loadUnit: plugins took 94.1865ms
[debug]       Load.loadUnit: defsScala took 0.3002ms
[debug] [Loading] Scanning directory C:\Users\gaber\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\gaber\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.9115 ms
[debug]           Load.resolveProject(global-plugins) took 39.3258ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\gaber\.sbt\1.0\plugins, plugins: List(<none>))) took 81.5655ms
[debug] [Loading] Done in C:\Users\gaber\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 103.4368ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.245ms
[debug]     Load.loadUnit(file:/C:/Users/gaber/.sbt/1.0/plugins/, ...) took 204.814ms
[debug]   Load.apply: load took 347.128ms
[debug]   Load.apply: resolveProjects took 5.3016ms
[debug]   Load.apply: finalTransforms took 58.8887ms
[debug]   Load.apply: config.delegates took 9.1858ms
[debug]   Load.apply: Def.make(settings)... took 394.4749ms
[debug]   Load.apply: structureIndex took 143.6218ms
[debug]   Load.apply: mkStreams took 2.0911ms
[info] loading global plugins from C:\Users\gaber\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5245.6136ms
[debug]           Load.loadUnit: plugins took 28.3204ms
[debug]           Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Users\gaber\IdeaProjects\p1\project
[debug]             Load.loadUnit: mkEval took 8.6811ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\gaber\IdeaProjects\p1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5091 ms
[info] loading settings for project p1-build from idea.sbt ...
[debug]               Load.resolveProject(p1-build) took 4.5142ms
[debug]             Load.loadTransitive: finalizeProject(Project(id p1-build, base: C:\Users\gaber\IdeaProjects\p1\project, plugins: List(<none>))) took 6.5075ms
[debug] [Loading] Done in C:\Users\gaber\IdeaProjects\p1\project, returning: (p1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2156.3959ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.0063ms
[debug]         Load.loadUnit(file:/C:/Users/gaber/IdeaProjects/p1/project/, ...) took 2190.8022ms
[debug]       Load.apply: load took 2192.6071ms
[debug]       Load.apply: resolveProjects took 0.1693ms
[debug]       Load.apply: finalTransforms took 13.1284ms
[debug]       Load.apply: config.delegates took 0.6045ms
[debug]       Load.apply: Def.make(settings)... took 87.2018ms
[debug]       Load.apply: structureIndex took 21.4785ms
[debug]       Load.apply: mkStreams took 0.0036ms
[info] loading project definition from C:\Users\gaber\IdeaProjects\p1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3305.4578ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\gaber\IdeaProjects\p1
[debug]       Load.loadUnit: mkEval took 0.2899ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\gaber\IdeaProjects\p1, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2909 ms
[info] loading settings for project p1 from build.sbt ...
[debug]         Load.resolveProject(p1) took 34.3307ms
[debug]       Load.loadTransitive: finalizeProject(Project(id p1, base: C:\Users\gaber\IdeaProjects\p1, plugins: List(<none>))) took 38.4083ms
[debug] [Loading] Done in C:\Users\gaber\IdeaProjects\p1, returning: (p1)
[debug]     Load.loadUnit: loadedProjectsRaw took 1314.9497ms
[debug]     Load.loadUnit: cleanEvalClasses took 15.295ms
[debug]   Load.loadUnit(file:/C:/Users/gaber/IdeaProjects/p1/, ...) took 4636.5784ms
[debug] Load.apply: load took 4638.1518ms
[debug] Load.apply: resolveProjects took 0.1257ms
[debug] Load.apply: finalTransforms took 25.0234ms
[debug] Load.apply: config.delegates took 0.3691ms
[debug] Load.apply: Def.make(settings)... took 86.7107ms
[debug] Load.apply: structureIndex took 21.7528ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to p1 (in build file:/C:/Users/gaber/IdeaProjects/p1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51187 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51187, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to p1 (in build file:/C:/Users/gaber/IdeaProjects/p1/)
[debug] > Exec(idea-shell, None, None)
